=== OLD FUNCTIONALITY USING MESSAGE BOX AND 3 SECOND TIMER BEFORE START ===
bool autoClickerAntiSpamStart = false;  // Anti message box spam
bool autoClickerAntiSpamStop = true;


void MainWindow::on_pushButton_clicked()
{
    qDebug() << "Start autoclicker button pressed";
    ui->pushButton->setChecked(true);
    ui->pushButton_2->setChecked(false);
    autoClickerAntiSpamStop = false;

    if (!autoClickerRunning) {
        qDebug() << "Autoclicker running";

        if (!autoClickerAntiSpamStart) {
            autoClickerAntiSpamStart = true;

            if (messageBox) {
                messageBox->close();
                delete messageBox;
            }

            messageBox = new QMessageBox(this);
            messageBox->setWindowTitle(tr("Auto Clicker Running"));
            messageBox->setText(tr("After clicking OK, the autoclicker will begin running in 3 seconds!"));
            messageBox->exec();
            QThread *thread = QThread::create(autoClickerRun);
            thread->start();
        }
        QThread *thread = QThread::create(autoClickerRun);
        thread->start();
    } else {
        qDebug() << "Autoclicker already running";
    }

}


void MainWindow::on_pushButton_2_clicked()
{
    qDebug() << "Stop autoclicker button pressed";
    ui->pushButton->setChecked(false);
    ui->pushButton_2->setChecked(true);
    autoClickerRunning = false;
    autoClickerAntiSpamStart = false;

    if (!autoClickerAntiSpamStop) {
        autoClickerAntiSpamStop = true;

        if (messageBox) {
            messageBox->close();
            delete messageBox;
        }

        messageBox = new QMessageBox(this);
        messageBox->setWindowTitle(tr("Auto Clicker Stopped"));
        messageBox->setText(tr("The autoclicker process has been stopped!"));
        messageBox->exec();
    }
}

===================== RUN AUTO CLICKER ==================================
void autoClickerRun() {
    int interval = 1;  // Autoclicker speed interval between clicks
    autoClickerRunning = true;

    Sleep(3000);  // Wait before starting for 3 seconds
    while (autoClickerRunning) {
        mouse_event(MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0);
        mouse_event(MOUSEEVENTF_LEFTUP, 0, 0, 0, 0);
        Sleep(interval);
    }
}

void autoClickerRun(Ui::MainWindow *ui, int numClicks) {
    int interval = 1;  // Autoclicker speed interval between clicks
    autoClickerRunning = true;

    while (autoClickerRunning) {

        if (ui->comboBox->currentText() == "Left") {
            mouse_event(MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0);
            mouse_event(MOUSEEVENTF_LEFTUP, 0, 0, 0, 0);

            if (ui->comboBox_2->currentText() == "Double") {
                mouse_event(MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0);
                mouse_event(MOUSEEVENTF_LEFTUP, 0, 0, 0, 0);
            }
        } else if (ui->comboBox->currentText() == "Right") {
            mouse_event(MOUSEEVENTF_RIGHTDOWN, 0, 0, 0, 0);
            mouse_event(MOUSEEVENTF_RIGHTUP, 0, 0, 0, 0);

            if (ui->comboBox_2->currentText() == "Double") {
                mouse_event(MOUSEEVENTF_RIGHTDOWN, 0, 0, 0, 0);
                mouse_event(MOUSEEVENTF_RIGHTUP, 0, 0, 0, 0);
            }
        }

        if (numClicks != -1)  {
            numClicks--;
            ui->spinBox->setValue(numClicks);
        }
        if (numClicks == 0) ui->pushButton_2->click();

        Sleep(interval);
    }
}


void MainWindow::on_pushButton_clicked()
{
    qDebug() << "Start autoclicker button pressed";
    ui->pushButton->setChecked(true);
    ui->pushButton_2->setChecked(false);

    if (!autoClickerRunning) {
        qDebug() << "Autoclicker running";

        int numClicks;

        if (ui->radioButton_2->isChecked()) numClicks = ui->spinBox->value();
        else numClicks = -1;

        QThread *thread = QThread::create([=]() {
            autoClickerRun(ui, numClicks);
        });
        thread->start();

    } else {
        qDebug() << "Autoclicker already running";
    }

}



void MainWindow::on_pushButton_2_clicked()
{
    qDebug() << "Stop autoclicker button pressed";
    ui->pushButton->setChecked(false);
    ui->pushButton_2->setChecked(true);
    autoClickerRunning = false;
}
